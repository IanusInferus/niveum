$Comment
    ==========================================================================
    
      File:        Schema.tree
      Location:    Yuki.Core <Tree>
      Description: 对象类型结构Java模板数据
      Version:     2012.12.13.
      Copyright(C) F.R.C.
    
    ==========================================================================

ObjectSchemaTemplate
    Keywords
        $List String
            abstract
            boolean
            break
            byte
            case
            catch
            char
            class
            const
            continue
            default
            do
            double
            else
            extends
            final
            finally
            float
            for
            goto
            if
            implements
            import
            instanceof
            int
            interface
            long
            native
            new
            package
            private
            protected
            public
            return
            short
            static
            strictfp
            super
            switch
            synchronized
            this
            throw
            throws
            transient
            try
            void
            volatile
            while
            true
            false
            null
    PrimitiveMappings
        PrimitiveMapping
            Name Unit
            PlatformName Unit
        PrimitiveMapping
            Name Boolean
            PlatformName boolean
        PrimitiveMapping
            Name String
            PlatformName java.lang.String
        PrimitiveMapping
            Name Int
            PlatformName int
        PrimitiveMapping
            Name Real
            PlatformName double
        PrimitiveMapping
            Name Byte
            PlatformName byte // This is not a real byte, but a signed byte.
        PrimitiveMapping
            Name UInt8
            PlatformName byte // This is not a real byte, but a signed byte.
        PrimitiveMapping
            Name UInt16
            PlatformName short
        PrimitiveMapping
            Name UInt32
            PlatformName int
        PrimitiveMapping
            Name UInt64
            PlatformName long
        PrimitiveMapping
            Name Int8
            PlatformName byte // This is not a real byte, but a signed byte.
        PrimitiveMapping
            Name Int16
            PlatformName short
        PrimitiveMapping
            Name Int32
            PlatformName int
        PrimitiveMapping
            Name Int64
            PlatformName long
        PrimitiveMapping
            Name Float32
            PlatformName float
        PrimitiveMapping
            Name Float64
            PlatformName double
        PrimitiveMapping
            Name Type
            PlatformName java.lang.reflect.Type
        PrimitiveMapping
            Name Optional
            PlatformName Optional
        PrimitiveMapping
            Name List
            PlatformName java.util.ArrayList
        PrimitiveMapping
            Name Set
            PlatformName java.util.HashSet
        PrimitiveMapping
            Name Map
            PlatformName java.util.HashMap
    Templates
        Template
            Name Main
            //Parameters: ${Header}, ${ClassName}, ${PackageName}, ${Imports}, ${Primitives}, ${ComplexTypes}
            Value
                $String
                    ${Header}

                    package ${PackageName};
                    import ${Imports}.*;
                    ${Primitives}

                    public class ${ClassName}
                    {
                        ${ComplexTypes}
                    }

                $End
        Template
            Name PredefinedTypes
            //Parameters:
            Value
                $String
                    @Record
                    public static class Unit
                    {
                    }

                    public @interface Record
                    {
                    }

                    public @interface Alias
                    {
                    }

                    public @interface TaggedUnion
                    {
                    }

                    public @interface Tag
                    {
                    }

                    public @interface Tuple
                    {
                    }

                $End
        Template
            Name Header
            //Parameters:
            Value
                $String
                    //==========================================================================
                    //
                    //  Notice:      This file is automatically generated.
                    //               Please don't modify this file.
                    //
                    //==========================================================================

        Template
            Name Primitive
            //Parameters: ${Name}, ${PlatformName}
            Value
                $String
                    // ${Name} = ${PlatformName};
        Template
            Name Alias
            //Parameters: ${Name}, ${Type}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    @Alias
                    public static final class [[${Name}]]
                    {
                        public [[(${Type})]] Value;

                        public static [[(${Name})]] Create([[(${Type})]] o)
                        {
                            [[(${Name})]] r = new [[(${Name})]]();
                            r.Value = o;
                            return r;
                        }
                    }
        Template
            Name TupleElement
            //Parameters: ${NameIndex}, ${Type}
            Value
                $String
                    public [[(${Type})]] [[Item${NameIndex}]];
        Template
            Name Tuple
            //Parameters: ${Name}, ${TupleElements}
            Value
                $String
                    @Tuple
                    public static final class [[${Name}]]
                    {
                        ${TupleElements}
                    }
        Template
            Name Field
            //Parameters: ${Name}, ${Type}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public [[(${Type})]] [[${Name}]];
        Template
            Name Record
            //Parameters: ${Name}, ${Fields}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    @Record
                    public static final class [[${Name}]]
                    {
                        ${Fields}
                    }
        Template
            Name Alternative
            //Parameters: ${Name}, ${Type}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public [[(${Type})]] [[${Name}]];
        Template
            Name AlternativeCreate
            //Parameters: ${TaggedUnionName}, ${TaggedUnionTagName}, ${Name}, ${Type}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public static [[(${TaggedUnionName})]] [[Create${Name}]]([[(${Type})]] Value)
                    {
                        [[(${TaggedUnionName})]] r = new [[(${TaggedUnionName})]]();
                        r._Tag = [[${TaggedUnionTagName}.${Name}]];
                        r.[[${Name}]] = Value;
                        return r;
                    }
        Template
            Name AlternativeCreateUnit
            //Parameters: ${TaggedUnionName}, ${TaggedUnionTagName}, ${Name}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public static [[(${TaggedUnionName})]] [[Create${Name}]]()
                    {
                        [[(${TaggedUnionName})]] r = new [[(${TaggedUnionName})]]();
                        r._Tag = [[${TaggedUnionTagName}.${Name}]];
                        r.[[${Name}]] = new Unit();
                        return r;
                    }
        Template
            Name AlternativePredicate
            //Parameters: ${TaggedUnionName}, ${TaggedUnionTagName}, ${Name}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public boolean [[On${Name}]]() { return _Tag == [[${TaggedUnionTagName}.${Name}]]; }
        Template
            Name TaggedUnion
            //Parameters: ${Name}, ${TagName}, ${AlternativeLiterals}, ${Alternatives}, ${AlternativeCreates}, ${AlternativePredicates}, ${XmlComment}
            Value
                $String
                    public static final class [[${TagName}]]
                    {
                        ${AlternativeLiterals}
                    }
                    ${XmlComment}
                    @TaggedUnion
                    public static final class [[${Name}]]
                    {
                        @Tag public int _Tag;

                        ${Alternatives}

                        ${AlternativeCreates}

                        ${AlternativePredicates}
                    }
        Template
            Name Literal
            //Parameters: ${Name}, ${Value}, ${UnderlyingType}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public static final [[(${UnderlyingType})]] [[${Name}]] = ${Value};
        Template
            Name Enum
            //Parameters: ${Name}, ${UnderlyingType}, ${Literals}, ${XmlComment}
            Value
                $String
                    ${XmlComment}
                    public static final class [[${Name}]] // ${UnderlyingType}
                    {
                        ${Literals}
                    }
        Template
            Name MultiLineXmlComment
            //Parameters: ${Description}
            Value
                $String
                    /**
                     * ${Description}
                     * */
        Template
            Name SingleLineXmlComment
            //Parameters: ${Description}
            Value
                $String
                    /** ${Description} */
