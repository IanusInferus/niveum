$Comment
    ==========================================================================

      File:        RV64Asm.tree
      Location:    Niveum.Expression <Tree>
      Description: 表达式结构RV64汇编模板
      Version:     2022.01.25.
      Copyright(C) F.R.C.

    ==========================================================================

#Option
    EnableEmbeddedExpr True

#Namespace Niveum.ExpressionSchema.RV64Asm

#Import
    System
    System.Collections.Generic
    System.Linq
    Firefly

#Constant PrimitiveMapping:Map<String, String>
    $Table KeyValuePairOfStringAndString Key Value
        Boolean             bool
        Int                 int
        Real                double

#Template GenerateHeader Schema:Schema NamespaceName:String
    //==========================================================================
    //
    //  Notice:      This file is automatically generated.
    //               Please don't modify this file.
    //
    //==========================================================================

    #pragma once

    #include ${Schema.Imports.Where(i => IsInclude(i))}
    #include <stdbool.h>

    $$
        foreach (var m in Schema.Modules)
        {
            foreach (var f in m.Functions)
            {
                var ParameterList = f.Parameters.Count == 0 ? "void" : String.Join(", ", f.Parameters.Select(p => PrimitiveMapping[p.Type.ToString()] + " " + GetEscapedIdentifier(p.Name)));
                ##
                    ${PrimitiveMapping[f.ReturnValue.ToString()]} [[${NamespaceName}_${m.Name}_${f.Name}]](${ParameterList});
            }
        }

$End

#Template GenerateAssembly Schema:Schema NamespaceName:String a:Niveum.ExpressionSchema.Assembly
    #==========================================================================
    #
    #  Notice:      This file is automatically generated.
    #               Please don't modify this file.
    #
    #==========================================================================

    .global Niveum_Expression_pow_II
    .global Niveum_Expression_pow_RR
    .global Niveum_Expression_exp_R
    .global Niveum_Expression_log_R
    .global Niveum_Expression_mod_II
    .global Niveum_Expression_div_II
    .global Niveum_Expression_round_R
    .global Niveum_Expression_floor_R
    .global Niveum_Expression_ceil_R
    .global Niveum_Expression_round_RI
    .global Niveum_Expression_floor_RI
    .global Niveum_Expression_ceil_RI
    .global Niveum_Expression_min_II
    .global Niveum_Expression_max_II
    .global Niveum_Expression_clamp_III
    .global Niveum_Expression_min_RR
    .global Niveum_Expression_max_RR
    .global Niveum_Expression_clamp_RRR
    .global Niveum_Expression_abs_I
    .global Niveum_Expression_abs_R
    .global Niveum_Expression_rand_V
    .global Niveum_Expression_rand_II
    .global Niveum_Expression_rand_RR
    .global Niveum_Expression_creal_I
    $$
        foreach (var m in Schema.Modules)
        {
            foreach (var f in m.Functions)
            {
                ##
                    .global [[${NamespaceName}_${m.Name}_${f.Name}]]
            }
        }

    $$
        foreach (var m in a.Modules)
        {
            foreach (var f in m.Functions)
            {
                ##
                    ${Indentize(BuildBody(NamespaceName, m.Name, f))}
            }
        }

$End
