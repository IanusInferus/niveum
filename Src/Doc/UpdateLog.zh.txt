2019.08.02
Niveum.Json:
增加一些Newtonsoft.Json中简化调用的函数，便于迁移。

2019.04.28
Niveum.Core, Niveum.Expression:
在C++代码生成中将std::wstring改为std::u16string，去除对std::wstring_convert的依赖。
Niveum.Core, Yuki.Relation:
在C++代码生成中将Optional改为std::optional。
Niveum.Core:
修正C#和C++兼容代码对Optional的处理。
Example:
修正C++示例，并升级到C++17。
修正C++示例，将Optional改为std::optional，Any改为std::any。
将所有C++代码中的Tab改为空格。
增加libc++缺少的<cuchar>头文件实现。
*:
整理工程和构建脚本。
将所有Optional中的NotHasValue改为None，HasValue改为Some。
升级Firefly, 将所有Optional中的NotHasValue改为None，HasValue改为Some。

2019.03.22
Example:
修正C#通讯示例客户端。

2019.02.22
Example:
整理C#通讯示例客户端增加正确的异常处理。

2019.02.20
Example:
修正C#通讯浏览器示例和C#通讯浏览器Blazor示例。

2019.02.17
Niveum.Core:
在C#通讯代码生成中对每个命令的错误用异常传递到Task结果中。
在C++通讯代码生成中对每个命令的错误增加错误处理回调和全局错误处理回调。
Example:
整理C#和C++通讯示例。

2019.02.13
Niveum.Core:
修正C++兼容代码生成中的命名空间。
Niveum.SchemaManipulator:
修正选项说明。

2019.02.11
Niveum.Core:
简化C#和C++类型兼容代码和通讯兼容代码对多版本的处理，使得类型只在修改时的版本处理，而不需要在修改前的所有版本都处理。
Example:
同步修改C#和C++通讯示例。

2019.02.03
Doc:
修正支持矩阵。

2018.12.27
Niveum.Core:
C#通讯、二进制、JSON代码生成从回调异步改为async/await异步。
Example:
修改C#通讯示例以支持async/await异步。

2018.12.23
Example:
升级C# Blazor浏览器通讯示例中Blazor和.Net Core SDK的版本。

2018.12.22
Niveum.Core:
完成Python二进制序列化代码生成的修改。
Yuki.SchemaManipulator:
重命名为Niveum.SchemaManipulator。
Yuki.Expression:
重命名为Niveum.Expression。
Yuki.ExpressionManipulator:
重命名为Niveum.ExpressionManipulator。
Example:
修正所有示例。
Niveum.Core, Yuki.Relation:
修正XHTML文档生成时有被引用的类型时会崩溃的问题。
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
将所有对Yuki.Core的引用改为对Niveum.Core的引用。
Yuki.TcpSendReceive:
重命名为Niveum.TcpSendReceive。
将所有对Yuki.Core的引用改为对Niveum.Core的引用。
Yuki.Core:
移除过渡版本Yuki.Core。

2018.12.21
Niveum.Core:
完成Python对象类型代码生成的修改。（由于Python不支持nested class import，无法支持多命名空间）

2018.12.20
Niveum.Core:
完成Java二进制序列化代码生成的修改。

2018.12.18
Niveum.Core:
完成Java对象类型代码生成的修改。

2018.12.17
Niveum.Core:
完成C++通讯兼容代码生成的修改。
Example:
修改C++通讯示例，增加对通讯兼容代码的支持。

2018.12.16
Niveum.Core:
完成C++二进制序列化代码生成的修改。
Example:
调整C++通讯示例。

2018.12.15
Niveum.Core:
完成C++通讯代码生成的修改。
完成C++版本代码生成的修改。

2018.12.12
Niveum.Core:
完成Haxe通讯代码生成的修改。
完成Haxe JSON序列化代码生成的修改。

2018.12.09
Niveum.Core:
完成VB代码生成的修改。

2018.12.08
Niveum.Core:
切换XHTML文档生成代码。

2018.12.07
Examples:
将SHA-1替换成SHA-256。
整理工程和构建脚本。

2018.12.06
Niveum.Core:
完成C#通讯兼容代码生成的修改。
结束对C#重试循环代码的支持，并移除代码。(原来用于对FoundationDB进行支持。)
完成C#版本代码生成的修改。

2018.12.05
Niveum.Core:
完成C# JSON序列化代码生成的修改。
修正对客户端和客户端命令名称在多命名空间中重复时的处理。
修正类型加载和比较出错的问题。
Example:
修正示例中的名称。

2018.12.04
Niveum.Core:
完成C#二进制序列化代码生成的修改。

2018.12.02
Yuki.Core:
增加对类型名称中使用命名空间的支持：完成加载部分和C#通讯代码生成的修改。
更名为Niveum.Core。
增加过渡版本Yuki.Core。
Example:
增加通讯代码对多命名空间的使用。
修正序列化示例。

2018.12.01
Nivea:
增加对类型名称中使用命名空间的支持。

2018.11.24
*:
更新构建脚本，只支持VS2017。
从SourceForge迁移到github。
修改文档、协议、发布脚本。

2018.09.19
Niveum.Json:
JSON解析库增加文法分析、语义转换、格式化，完成基本功能。
提高性能。
Yuki.Core:
C# JSON代码生成中去除对Json.NET(Newtonsoft.Json)的使用，改为使用Niveum.Json，严格遵守JSON标准(ECMA-404)，避免新版Json.NET对日期等字符串的特殊扩展处理导致的问题。
Yuki.TcpSendReceive:
将Json.NET改为Niveum.Json。
Example:
将Json.NET改为Niveum.Json。
增加C# Blazor浏览器通讯示例。

2018.09.17
Niveum.Json:
增加JSON解析库，完成词法分析。
Doc:
增加JSON格式文档。

2018.09.10
Example:
更新C#通讯浏览器示例的Bridge.NET到17.3.0。

2018.09.06
Example:
修正C# Krustallos数据库文件保存用的ReliableFileWriteStream释放多次会出错的问题。
*:
修正不使用VS2017的MSBuild的问题。

2018.08.29
Example:
修正C++和Java中读取文件时可能读到错误数组长度导致占用大量内存的问题。
去除Java示例代码对eclipse的依赖。
Lib:
更新Firefly，修正TransEncoding版本不匹配的问题。

2018.08.21
Yuki.Relation, Yuki.RelationSchemaManipulator:
修正C#和C++内存数据库代码生成中的编译错误。
Example:
增加C++内存数据库示例。
修改写法。

2018.08.20
Yuki.Core, Yuki.Relation, Yuki.Expression:
将C++代码生成中的Alias类型改为值类型。
将C++代码生成中的List, Set, Map改为值类型。
Example:
对应进行修改。

2018.08.17
Yuki.Core, Yuki.Relation, Yuki.Expression:
将用到的SHA-1算法换成SHA-256算法。
Yuki.Core, Yuki.SchemaManipulator:
增加C#和C++类型版本代码生成。
Example:
修正序列化示例中的Schema旧版本类型误引用新版本类型的错误。
序列化示例中增加C#和C++类型版本代码生成。
Yuki.Core:
修正C++兼容代码生成和类型版本代码生成中的错误。

2018.08.16
Yuki.Core, Yuki.SchemaManipulator:
增加C++兼容代码生成。

2018.08.15
Yuki.Core, Yuki.SchemaManipulator:
增加非通讯Schema比较功能。
增加C#非通讯兼容代码生成。

2018.07.05
Yuki.Core:
优化C#和C++二进制代码生成中对二进制数据List<Byte>的处理。
修改整体框架名称为Niveum。
Nivea, Yuki.*:
更新整个集合取.ToString()的问题生成的代码。
Example:
修正C++文件流对List<Byte>的处理。

2018.01.11
Nivea:
修正内嵌C#代码生成时集合展开有些情况下会变成整个集合取.ToString()的问题。

2017.09.11
Example:
删除Python序列化示例中的无用分号。

2017.09.05.0
Nivea:
过滤器表达式支持多参数。

2017.07.20
Nivea:
将变量名转义表达式扩充为过滤器表达式，可以使用自定义函数实现多个过滤器。

2017.07.19
Yuki.Core, Yuki.Relation:
修正C++代码生成中枚举的Elaborated type specifier使用enum class，在clang上不兼容的问题。
Nivea:
更改行内嵌入表达式语法，支持${xxxx}, ${{xxxx}}, ${{{xxxx}}}, ...，使得更容易处理内部有"}"的情况。

2017.07.18
Yuki.Relation:
修正C++内存数据库代码生成中的编译错误。
Yuki.Expression:
修正C++表达式计算二进制程序集加载代码生成的编译错误。
Yuki.Core:
去掉无用代码。

2017.07.17
Example:
升级Haxe到3.4.2。

2017.07.02
Yuki.Core:
C#、C++、Java二进制代码生成增加集合长度初始化。

2017.05.09
Yuki.Core, Yuki.SchemaManipulator:
增加Python二进制代码生成。
Example:
增加Python序列化示例。

2017.04.25
Yuki.Core, Yuki.SchemaManipulator:
增加Python类型代码生成。

2017.04.22
Example:
升级C++代码。
Yuki.Core, Yuki.SchemaManipulator, Yuki.TcpSendReceive:
修正async标记导致的服务器端和客户端散列值不一致。

2016.10.27
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator, Example:
结束对PostgreSQL的支持。

2016.10.16
Yuki.Expression:
增加新版C#表达式计算二进制程序集加载代码生成，移除旧版。
增加新版C++表达式计算二进制程序集加载代码生成，移除旧版。

2016.10.12
Yuki.Core:
增加新版XHTML代码生成，移除旧版。
Yuki.Relation:
修正编译。

2016.10.11
Yuki.Core:
增加新版Java类型代码生成，移除旧版。
增加新版Java二进制代码生成，移除旧版。

2016.10.06
Yuki.Core:
增加新版Haxe二进制通讯代码生成。
修正对类型字符串中转义的处理。
移除旧版C++类型和通讯代码生成，修正一些问题。
移除旧版C#类型生成。
Example:
更新一些C++代码生成示例。

2016.10.05
Yuki.Core, Example:
结束对ActionScript的支持，并移除代码。
Yuki.Core:
修在新版C# JSON代码生成中名称小写与之前不一致的问题。
增加新版Haxe类型代码生成。
Example:
更新Haxe编译器至3.3.0，修正一些warning。

2016.10.04
Yuki.Core:
增加新版C++类型代码生成。
增加新版C++二进制通讯代码生成。
Example:
修正Serialization、Communication的C++项目编译。

2016.09.10
Yuki.Core:
增加新版VB类型代码生成。

2016.09.04
*:
更新Firefly。
Yuki.Relation, Yuki.DatabaseRegenerator:
合并Krustallos和Memory数据库格式。
Example:
修正Database编译。

2016.09.02
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator, Example:
结束对Linq to SQL, FoundationDB和Krustallos-MySQL三种数据库的支持，并移除代码。

2016.08.26
Yuki.Core:
增加新版C#重试循环代码生成。
ObjectSchema加载时忽略Namespace。
Example:
修正Expression编译。

2016.08.22
Yuki.Core:
增加新版C#通讯兼容代码生成。
修正注释中不在最开始的[]也被看作Attribute的问题。
Yuki.Relation:
修正生成文档时崩溃的问题。
Yuki.SchemaManipulator:
修正存储类型结构数据存储，直接存为Tree文件，不再经过XML。
*:
更新Firefly。

2016.08.06
Yuki.Core, Yuki.Relation:
增加新版C#类型代码生成。
增加Attribute。
重写类型结构加载器。
*:
相应修改。
Yuki.Core:
增加新版C#二进制通讯代码生成。
增加新版C# JSON通讯代码生成。
*:
更新Firefly。

2016.08.05
Nivea:
修正类型名称中的关键字转义。

2016.08.03
Nivea:
修正Nivea生成时，会出现行尾空格的问题。
增加Nivea生成时不覆盖未改变文件的功能。
Yuki.Core, Yuki.Relation, Yuki.Expression:
去除对Firefly.MetaSchemaManipulator和Yuki.SchemaManipulator的依赖，改用Nivea生成代码。

2016.08.02
Nivea:
删除#表达式。
删除类型绑定器和歧义去除器。
增加对行内表达式表达多行文本的处理，进行笛卡儿积。
增加对非字符串表达式的自动转换。
Nivea增加C#类型代码生成，不再使用Yuki.SchemaManipulator生成类型代码。

2016.08.01
Nivea:
将Constant节的解析和代码生成分开。

2016.07.26
*:
将部分遗漏的数组改为List。

2016.07.25
*:
将Firefly.Core换成Firefly.Lite。

2016.07.22
Yuki.Core, Nivea:
修正变量名识别中没有包含下划线的问题。
Nivea:
支持简单Constant生成。

2016.07.19
Nivea:
修正模板解析时的空行处理问题。

2016.07.15
Nivea:
修正内嵌C#代码生成模板为空时出现编译错误的问题。
修正内嵌C#代码生成时\没有正常生成的问题。

2016.07.14
Yuki.Core:
类型代码生成支持自定义基元。
Nivea:
修改文法，增加全局常量和嵌入代码，删除全局代码段。
修正模板解析时的空行处理问题。
增加内嵌C#代码生成。
Yuki.Core, Yuki.Relation:
修正部分写法。

2016.06.07
Nivea:
增加部分类型检查。

2016.06.06
Nivea:
增加部分类型检查。

2016.06.04
Nivea:
增加类型绑定器。

2016.06.03
Nivea:
增加歧义去除器。
增加Mono.Cecil库。

2016.06.02
Nivea:
完成文法分析。
增加文法树导出。
*:
更新Firefly库。
将obj中间文件夹移出Src文件夹。

2016.06.01
Nivea:
完善表达式解析转换，修正词法和文法。

2016.05.31
Nivea:
增加变量名称解析。

2016.05.27
*:
更新Firefly库。
Nivea:
完善表达式解析转换，修正词法。

2016.05.26
*:
更新Firefly库。
Nivea:
完善表达式解析，增加表达式转换。

2016.05.25
Nivea:
增加表达式解析器和序列构建器。

2016.05.24
Nivea:
增加文件解析器和类型解析器。

2016.05.23
*:
更新Firefly库。
Nivea:
修正词法分析中解析"")时出错的问题。

2016.05.21
Nivea:
词法分析增加是否在一行的起始和是否在非缩进空格后。
增加文法分析文档。
增加文法分析示例。
Yuki.Core:
泛型参数不再支持字面量，只支持类型。
简化代码。
Examples:
由于通讯散列值变化，更新通讯示例。

2016.05.20
*:
更新Firefly库。
修正MSBuild路径。
Nivea:
增加词法分析。

2016.05.19
*:
更新Firefly库。
添加Nivea项目。

2016.05.13
*:
更新Firefly库。
将Opt类型改为Optional类型。
将代码生成中的大部分数组都改为List。

2016.04.17
Yuki.Core:
修正Java类型定义代码生成中Optional类型的名称错误。
*:
增加排除文件。

2016.01.25
Examples:
修正C#通讯实例中TCP关闭时的问题。

2015.12.24
Examples:
C++通讯示例客户端增加版本检查。
更新C#通讯浏览器示例的Bridge.NET到1.10.3。

2015.12.22
Examples:
修正C++通讯示例的编译问题。

2015.12.18
Examples:
C++通讯示例增加带毫秒的时间函数。

2015.12.12
Examples:
增加C#通讯示例静态服务器转向功能。
优化C#通讯浏览器示例的Base64编码的性能。

2015.12.05
Examples:
更新C#通讯浏览器示例的Bridge.NET到1.10.2。

2015.11.25
Yuki.SchemaManipulator:
修正命令行说明。
Examples:
更新C#通讯浏览器示例的Bridge.NET到1.10，删除部分workaround。

2015.11.11
Examples:
修正C#通讯浏览器示例的一些问题。

2015.11.09
Examples:
增加C#通讯浏览器示例。

2015.11.08
Examples:
增加C#通讯示例中的静态HTTP服务器，使得Haxe网页代码能够不需要Linux就能访问。
删除Haxe通讯示例中的一些无用代码。

2015.10.27
Yuki.Core, Yuki.Relation:
修正C++和Haxe代码生成中部分错误信息不统一的问题。
Examples:
修正C#和C++通讯示例中UDP传输层有时候服务器到客户端的包丢失时不会在客户端重发时重发的问题。

2015.10.22
Examples:
修正C#和C++通讯示例中UDP传输层在序列号绕回时连接会断开的问题。
修正C#和C++通讯示例中UDP传输层在序列号确认有时候会导致连接断开的问题。

2015.10.21
Examples:
修正C#通讯示例中http服务器有时候接收连接会崩溃的问题。

2015.09.26
Yuki.Relation:
修正C# Krustallos代码生成中的隔离等级为Snapshot。
Examples:
修正C#数据库示例中Krustallos的隔离等级。

2015.09.24.0

2015.09.21
Examples:
修正C#和C++通讯示例中UDP传输层接收包时的一处安全问题。

2015.09.18
Examples:
修正C#和C++通讯示例中TCP和UDP传输层在调试时会捕捉应用层异常的问题。

2015.09.08
Examples:
修正C#和C++通讯示例中UDP传输层包加密Token不兼容的问题。
去除C++通讯代码中传输层部分代码对生成代码的依赖。

2015.09.07
Examples:
C++通讯示例客户端增加对第一个数据包的特殊处理，防止一次发出多个数据包产生底层异常。
改进通讯示例兼容代码生成脚本。

2015.08.31
Examples:
C#和C++通讯示例修正对旧版本的支持。
C++通讯示例增加对异常时记录代码栈的处理。
修正C++通讯示例在Linux上的链接问题。

2015.08.24
Examples:
C++通讯示例修正客户端超时时间单位不对的问题。
C++通讯示例修正客户端连接时多余的服务器地址。

2015.08.23
Examples:
C++通讯示例修正写法。

2015.08.22
Yuki.Core:
增加C++通讯代码生成对异步调用的支持。
Yuki.SchemaManipulator:
增加对所有通讯命令使用异步调用的选项。
Examples:
C++通讯示例增加对异步调用的使用。

2015.08.19
Examples:
C++数据库示例去除对boost代码的使用，但Mysql Connector C++仍然依赖于boost。

2015.08.18
Yuki.Relation:
增加C# Krustallos代码生成对Identity字段的支持。
修正C# Krustallos代码生成中的隔离等级为Serializable。
Examples:
增加C# Krustallos代码生成的Mail示例。
C++表达式示例去除对boost的依赖，自行实现any类型。

2015.08.17
Examples:
删除通讯示例中关于Linux的一些注释。

2015.08.15
Examples:
调整C#通讯示例中的一些代码。
增加C++通讯示例的UDP服务器实现。
修正C++通讯示例对Linux的兼容性。
*:
升级到VS2015。

2015.08.13
Examples:
简化C#通讯示例中的一些写法。
更新C++通讯示例的TCP服务器实现，使其与C#通讯示例保持一致。
整理通讯示例目录。

2015.08.11
Examples:
简化C#通讯示例中的一些写法。

2015.08.08
Examples:
修改C#通讯示例中的一些写法。

2015.07.30
Examples:
修改C++通讯示例中一处不严谨的地方。

2015.07.29
Examples:
修改C++各示例中的字符串工具。

2015.07.27
Examples:
修正C++表达式示例和数据库示例中ThreadLocalVariable的实现。

2015.07.26
Examples:
修正C++通讯示例中ThreadLocalVariable的实现。

2015.07.22
Examples:
将C++各示例的Utility.h更名为Strings.h，并对代码进行整理。
将C++各示例的命令行显示的编码更改为Unicode。
修正C++各示例的CMakeList文件中的空格。
将C++各示例的Strings.h进行整理，使其全部为C++风格。
将C++各示例的Strings.h改名为StringUtilities.h，防止重名。

2015.07.21
Examples:
修正C++通讯示例编译说明。

2015.07.19
Examples:
C++通讯示例去除对boost的依赖。
C++通讯示例在g++ 4.8.2上编译。

2015.07.18
Examples:
C++通讯示例中将mutex从使用boost改为使用标准库。
C++通讯示例中将大部分thread从使用boost改为使用标准库。
C++表达式示例中将大部分thread从使用boost改为使用标准库，更新随机数生成器代码。
C++序列化示例中更新部分代码。
C++数据库示例中将mutex和大部分thread从使用boost改为使用标准库。
C++通讯示例中将asio从使用boost改为使用单独的asio库。
C++通讯示例中将格式化从使用boost改为使用C++ Format。
C++通讯示例中将CRC32库从使用boost改为单独的源代码。

2015.07.17
Examples:
C++通讯示例中将系统时间库从使用boost改为使用标准库。

2015.06.29
Yuki.Relation, Yuki.DatabaseRegenerator:
增加数据文件导出导入功能。

2015.06.23
Yuki.DatabaseRegenerator:
增加数据库导出为数据文件的功能。
减小将数据库导出时的内存占用。

2015.06.17
Yuki.Relation, Yuki.DatabaseRegenerator:
重做数据库结构升级功能，修改语法，使得整个变换更像映射，支持将一个字段映射到多个字段上。
修正数据库结构升级验证的部分遗漏。

2015.05.02
Yuki.Core:
修正C#兼容代码生成中没有生成基元类型别名的问题。
修正C#兼容代码生成中Map的Value没有正确生成转换代码的问题。

2015.05.02
Yuki.Relation:
修正C# Krustallos代码生成中实例创建时可能对同一连接字符串创建多个相同实例的问题。

2015.04.20
Examples:
C#通讯示例中服务器的工作线程数量改为设置的数量。

2015.04.17
Examples:
增加C#通讯示例中服务器的命令行日志中远程服务器IP和端口的显示。

2015.04.09
Examples:
将C#和C++通讯示例中的读缓存大小改为参数，可以传入。

2015.04.04
Examples:
增加多行时使用\断行的功能，防止因为每行输入的字符数量上限导致无法输入完整表达式的问题。

2015.03.20.0

2015.03.09
Examples:
修正C#通讯示例中UDP监听0.0.0.0且机器有多网卡时，会出现从一个网卡接到包，但从另一个网卡返回的问题。

2015.02.27
Yuki.Core, Yuki.SchemaManipulator:
修改C++二进制代码生成，使得通讯的服务器代码和客户端代码可以单独选择是否生成。
Yuki.DatabaseRegenerator:
修正编译警告。

2015.02.24
Yuki.Relation:
修正C#数据库代码生成中实体中带有Identity时Update生成为Insert语句内容的问题。
修改C# FoundationDB SQL代码生成中的Upsert的SQL语句。
Examples:
修正数据库示例中的编译错误，将重试逻辑放入单独的包装器中。
增加数据库示例MySQL的重试逻辑。

2015.02.15
Yuki.Relation:
增加数据库结构变化描述文件对Optional类型字段的支持。
Yuki.Relation, Yuki.DatabaseRegenerator:
增加数据库结构升级功能。

2015.02.14
Yuki.Relation, Yuki.DatabaseRegenerator:
增加数据库结构变化描述文件的验证。

2015.02.13
Yuki.Relation, Yuki.DatabaseRegenerator:
增加数据库结构变化描述文件的生成和读取。

2015.02.12
Yuki.Core:
修正C++代码生成时，部分命名空间没有使用::导致出错的问题。
Yuki.Expression, Yuki.ExpressionManipulator:
增加C++表达式计算二进制程序集加载代码生成。
修正C++表达式计算二进制程序集加载代码生成中一处访问控制问题。
Examples:
增加C++表达式示例。

2015.02.10
Examples:
更新数据库示例Npgsql说明。
Yuki.Core, Yuki.SchemaManipulator:
实现C#对象数据结构通讯重试循环代码生成。

2015.02.09
Yuki.DatabaseRegenerator:
修正PostgreSQL和FoundationDB SQL导入时serial的初始值不正常的问题。
Examples:
增加对FoundationDB SQL的二进制数据处理不兼容的补丁。

2015.02.06
Yuki.Core, Yuki.Relation:
修正C++代码生成，使用枚举类型作为Map键时出现编译错误的问题。

2015.02.05
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
增加FoundationDB SQL数据库DROP和CREATE脚本生成。
增加C# FoundationDB SQL数据库代码生成。
Examples:
增加C# FoundationDB SQL数据库示例。

2015.02.04
Yuki.DatabaseRegenerator:
修正拼写错误。

2014.12.24
Yuki.Core:
修改C#二进制和JSON代码生成中KeyValuePair作为键时，使用默认散列函数导致重复值过多时性能降低的问题。
Yuki.Relation:
将C# Krustallos-MySQL代码生成拆分成缓存和加载器两部分。

2014.12.16
Examples:
修正C#通讯示例，防止客户端在包大小较大时在回调线程抛出异常。
修正C++通讯示例，修正TCP断线时无法检测到的问题。

2014.12.06
Yuki.Relation:
增加各数据库代码生成对Int64的支持。
Examples:
修正数据库示例，增加Int64的支持。

2014.11.30
Examples:
修正C#通讯示例，捕获Http服务器关闭时的一个异常。

2014.11.26
Yuki.Relation:
将Haxe代码生成中的Int64改为使用Float。
Examples:
修改C#通讯示例，将计时单位从毫秒改为微秒。

2014.11.24
Yuki.Relation:
修改C# Krustallos代码生成，增加加载和保存数据文件的功能。
修改C# Krustallos代码生成，增加获得当前读取版本的功能。
Examples:
对应修改C#数据库示例。
修正C#和C++通讯示例，使得UDP初始发出两个或以上数据包时报错。

2014.11.23
Yuki.Relation:
修改C# Krustallos代码生成，增加By键为空但OrderBy不为空时无法分区的限制。
Examples:
修改C#通讯示例，增加HMAC-SHA1标准实现。

2014.11.21
Examples:
修改C#和Haxe通讯示例，修改配置文件。

2014.11.19
Examples:
修正C#通讯示例，去除编译警告。
Krustallos:
去除编译警告。
Yuki.Relation:
去除C# Krustallos数据库代码生成中的编译警告。

2014.11.17
Examples:
修改C#通讯示例，将ReaderWriterLock改为ReaderWriterLockSlim。
Krustallos:
将String比较改为固定区域。

2014.11.16
Examples:
修改C#通讯示例，减小锁的范围。
修改C++通讯示例，增加错误处理函数。

2014.11.14
Krustallos:
去除By键为空时无法分区的限制。
修正当前读取版本会设为比以前的值小，导致读取时可能需要读取的版本已被删除的问题。
Yuki.Relation:
按照Krustallos的修改进行对应的C# Krustallos代码生成。

2014.11.12
Krustallos:
增加分区功能，尝试减小锁的范围。
Yuki.Relation:
按照Krustallos的修改进行对应的C# Krustallos和C# Krustallos-MySQL代码生成。
Yuki.DatabaseRegenerator:
将数据加载改为并行的。

2014.11.09
Krustallos:
去除事务提交全局锁，所有数据读取都只读取Reader版本。
将部分无锁操作改为使用锁来进行。
修正删除无用版本时删除了部分需要用到的版本的问题。
去除部分无用代码。
Yuki.Relation:
按照Krustallos的修改进行对应的C# Krustallos代码生成修改。

2014.11.03
Examples:
修改C#通讯示例，将线程池实现改为使用阻塞队列。

2014.11.02
Examples:
修正C#通讯示例，修正死锁问题。
修改C#通讯示例，增加命令计数。
修正C#通讯示例，修复HTTP关闭时的异常。
修改C#、C++通讯示例，去除冗余代码。

2014.11.01
Examples:
修正C#通讯示例，使得退出时Socket已销毁不报错。
Krustallos:
去除部分装箱，优化性能。

2014.10.31
Examples:
修正C#通讯示例，使得Ctrl+C一次后，不再需要等待线程池中其他命令执行完才去掉Ctrl+C处理器。
修改C#通讯示例，增加启动和退出时间记录。
修正C#通讯示例，去除死锁问题。

2014.10.30
Examples:
修改C#通讯示例，去除TCP、UDP和HTTP的后台线程。
修改C#通讯示例，优化性能。
修正C#通讯示例，去除HTTP服务器关闭时的异常。
修改C#、C++通讯示例，降低ACK包发送数量。

2014.10.29
Examples:
修改C#通讯示例，使得Ctrl+C一次后，第二次一定能结束程序。
修正C++通讯示例，去除SessionId没有正确设置的问题。
修改C#、C++通讯示例，防止SessionId为0。

2014.10.27
Krustallos:
去除部分内存分配，优化性能。
Examples:
修改C#通讯示例，更换SHA-1计算实现，优化性能。
修改C#通讯示例，去除部分数组创建，优化性能。
修改C#、C++通讯示例，修改第一次发包收到回应时的处理。

2014.10.26
Krustallos:
事务提交时锁定受影响数据表，改为全局锁定，防止出现提交后重新创建事务，看不见之前的提交的问题。

2014.10.25
Yuki.Relation:
修改C# Krustallos数据库代码生成，增加对自增字段的禁止。
修改MySQL数据库代码生成，去除MySQL认为是重复但实际未重复的索引(因为MySQL不支持索引中的字段指定为逆序)的生成代码。
修改C# Memory数据库代码生成，删去无用代码。
修正C#计时包装代码生成中，有特定命名空间的问题。
修正C# Krustallos数据库代码生成中，Select Count后不跟By索引时生成代码编译错误的问题。
修正C# Krustallos数据库代码生成和C# Krustallos-MySQL数据库代码生成中，实例保存为全局变量的问题。
修正C# Krustallos数据库代码生成中，Update和Upsert不会删除非主键的其他索引中的原数据的问题。
修正C# Krustallos数据库代码生成中，Select Range的性能问题。
放松对OrderBy的语法限制，限制为“By索引加上OrderBy索引中除去By索引的部分，必须和Entity已经声明的Key一致”。
修正C# Krustallos数据库代码生成中，Update和Upsert Many有编译错误的问题。
修正C# Krustallos数据库代码生成中，非唯一索引没有转换为唯一索引的问题。
Krustallos:
加快版本分配速度。
增加枚举比较器。
增加在某个范围内分页的功能。
Examples:
修改数据库示例，增加Select Count测试用例。
修改数据库示例，增加枚举比较器测试用例。
修改数据库示例，增加在某个范围内分页的功能的测试用例。

2014.10.24
Yuki.Relation:
修改C# Krustallos数据库代码生成，增加对读取自己修改的支持。
增加C# Krustallos-MySQL数据库代码生成。
修正Krustallos数据库不变平衡树的实现中的旋转错误问题。
修正C# Krustallos-MySQL数据库代码生成，在只读事务时不创建MySQL连接。
修正C# Krustallos数据库代码生成，减少数组分配。
Examples:
增加C# Krustallos-MySQL数据库示例。
修改C# Krustallos数据库示例，增加测试用例。

2014.10.23
Yuki.Relation:
完成C# Krustallos数据库代码生成。
Examples:
修改C# Krustallos数据库示例，增加测试用例。

2014.10.21
Yuki.Relation:
修正C#计时包装代码生成中，生成的Select Range代码编译错误的问题。
精简C#内存数据库代码生成代码。
增加C# Krustallos数据库代码生成。
Krustallos:
增加反向遍历。
增加范围计数。
减少排序比较。
Examples:
修改C# Krustallos数据库示例，增加测试用例。

2014.10.20
Krustallos:
增加并行比较器和测试。

2014.10.19
Krustallos:
增加Krustallos内存事务数据库代码。
Yuki.Relation:
增加C#计时包装代码生成。
去除C# MySQL代码中的计时功能。
Examples:
修改C#数据库示例，对应Yuki.Relation的修改。

2014.10.15
Examples:
修正C#/C++通讯示例中网络较卡时，一次收到很多包，确认包会被服务器拒绝的问题。

2014.10.11
Yuki.Relation:
增加Insert Optional和Update Optional功能，但其中Insert Optional功能只有MySQL代码生成支持，SQL Server和PostgreSQL不支持。

2014.10.10
Yuki.DatabaseRegenerator:
增加FoundationDB通过PostgreSQL驱动生成数据库的功能。

2014.10.07
Examples:
更新C#数据库代码生成的性能测试结果。

2014.10.04
Yuki.Relation:
修正C# MySQL数据库代码生成，防止Upsert的值和原来一样时返回0导致出错。
Examples:
修改C#通讯示例，增强调试支持。

2014.10.03
Examples:
修改C++通讯示例，增加客户端异常处理函数。
修改C#通讯示例，增加自定义线程池。
修改C#通讯示例，修正自定义线程池对mono不兼容的问题。

2014.10.02
Examples:
修改C#通讯示例，减少锁定导致的争用。
修改C#通讯示例，减少线程切换可能导致的响应时间上升。

2014.10.01
Yuki.Relation:
修改C# MySQL数据库代码生成，增加计次功能。
修改C# MySQL数据库代码生成，将计时的单位改为微秒。

2014.09.28
Yuki.Relation:
增加类型结构保存和加载功能。
Examples:
修改C#、C++通讯示例，重发时间策略。

2014.09.26
Yuki.Core:
修改C#兼容代码生成中，生成类型为Unit选项时，变量没有正确替换的问题。

2014.09.24
Yuki.Relation:
修改C# MySQL数据库代码生成，增加计时功能。

2014.09.23
Examples:
修改C#通讯示例中的UDP实现，防止UDP包过多导致的包积累问题。

2014.09.22
Yuki.Core:
修改C#二进制序列化代码生成，将每个线程生成二进制序列化器改为使用一个序列化器池。
修改C#二进制序列化代码生成，在非Firefly代码增加FromBytes和ToBytes方法。
Yuki.Expression:
修改表达式计算，将生成的公式代码改为支持多线程的。
修正表达式计算中的一处更改错误。
Yuki.Relation:
修改数据库代码生成，整理部分接口。
Examples:
修正表达式示例。
修改数据库示例。

2014.09.20
Examples:
调整C#数据库示例，修正死锁问题。

2014.09.08
Examples:
调整Haxe通讯示例，修正命令队列。
调整C#通讯示例，修改写法，去除无用变量。

2014.09.07
Yuki.Core:
修正Haxe JSON代码生成中一处大小写错误。
Examples:
调整C#通讯示例，修改写法，去除无用变量。
调整Haxe通讯示例，修改JsonHttpClient写法。
调整C#通讯示例，修改HTTP服务器，去除对来路判断的无用异常。
调整Haxe通讯示例，增加命令队列，使得同时发出多个命令时不再出错。

2014.09.02
Examples:
调整C#通讯示例，修改使用UDP连接时切换网络时IP变化导致清理线程异常的问题。

2014.09.02
Examples:
调整C#通讯示例，修改异常。
调整C++通讯示例，修改异常。

2014.08.31
Examples:
调整C#通讯示例，增强UDP服务器和客户端稳定性，将客户端改为多线程可用。
调整C++通讯示例，增强UDP客户端稳定性。

2014.08.30
Yuki.Relation:
增加MySQL主键中不支持NULL字段的检测。
Yuki.Core:
修正C++二进制代码生成中Int有一处写为Int32的问题。

2014.08.26
Yuki.Relation:
修正字节数组导入时空数组识别错误的问题。

2014.08.16
Examples:
调整C++通讯示例，修正UDP客户端多线程崩溃问题。

2014.08.15
Examples:
调整C++通讯示例，增加客户端测试。

2014.08.13
Examples:
调整C++通讯示例，修正编译器兼容性。
调整C++通讯示例，去除无用注释。
调整C++通讯示例，修正UDP 10054问题。

2014.08.12
Examples:
调整C#通讯示例，去除冗余代码。
调整C++通讯示例，增加UDP客户端。

2014.08.11
Examples:
调整C#通讯示例，去除冗余代码。
调整C++通讯示例，完成TCP客户端写法修改。

2014.08.08
Examples:
调整C#通讯示例，修改命名。
调整C++通讯示例，修改客户端写法。

2014.08.07
Examples:
调整C#通讯示例，去除UDP一处异常。
调整C++通讯示例，改进TCP客户端写法。

2014.08.06
Examples:
调整C#通讯示例，修正客户端HTTP写法。
调整C#通讯示例，调整UDP参数。

2014.08.05
Examples:
调整C#通讯示例，增加UDP超时的渐进策略。
调整C#通讯示例，增加UDP加密。
调整C#通讯示例，增加UDP性能测试结果。
调整C#通讯示例，修正写法。

2014.08.01
Examples:
调整C#通讯示例，改进UDP性能。
调整C#通讯示例，增加空闲时的辅助确认包。

2014.07.31
Examples:
调整C#通讯示例，改进UDP稳定性。
调整C#通讯示例，区分未登录和登录连接的超时时间。
调整C#通讯示例，增加UDP测试。

2014.07.30
Examples:
调整C#通讯示例，增加UDP协议。

2014.07.15
Yuki.SchemaManipulator:
修正通讯代码生成时某一个类型在相邻的两个Schema中没有变化，但在最新的Schema中变化时，生成的兼容类型文件错误的问题。
Examples:
修改通讯示例对应脚本。

2014.07.03
Yuki.Relation:
修正C++内存数据库代码生成中的文字错误。

2014.06.25
Examples:
调整C#通讯示例，为TCP服务器和客户端的二进制和JSON协议增加加密功能。

2014.06.05.0
Doc:
更新说明文档。

2014.05.01
Yuki.Core:
修正ObjectSchema写入时如果泛型定义中有字面量会出错的问题。
修正ObjectSchema写入时Alias没有写入泛型参数的问题。
增加VB和C#的带字面量泛型代码生成。

2014.04.23
Yuki.Relation:
将MySQL代码生成的TEXT和BLOB类型替换为LONGTEXT和LONGBLOB。

2014.04.11
Yuki.*:
修正命令行程序中的一处写法。

2014.04.04
Examples:
调整C#通讯示例，修正一处写法。

2014.03.11
Examples:
调整C#通讯示例，增加对非标准HTTP位置的兼容处理。
调整C#通讯示例，增加对通过代理服务器访问的IP地址兼容处理。

2014.03.07
Yuki.Core:
修正C#兼容代码生成中的一处空引用问题。

2014.03.03
Examples:
调整C#通讯示例，修正一处死锁。

2014.03.02
Examples:
调整C#通讯示例，修正一处死锁。

2014.02.11
Yuki.Core, Yuki.Expression:
修正文字错误。

2014.01.26
Yuki.Core:
修正SchemaManipulator使用/load加载类型之后里面import为空，再添加import生成代码时会出错的问题。

2014.01.18
Yuki.Relation:
调整C#数据库代码生成，增加指定事务隔离级别的重载。
Examples:
调整C#通讯示例，修正因为退出不及时导致的网络锁定出错。
调整C#通讯示例，修正HttpSession退出卡住的问题。

2014.01.17
Yuki.Core:
增加C#代码生成对异步命令的处理。
Examples:
调整C#通讯示例，完成命令异步化。

2014.01.16
Examples:
调整C#通讯示例，为命令异步化做准备。
修正C#通讯示例无法通过稳定性测试的问题。
调整C#通讯示例，统一化服务器Session的状态管理。
调整C#通讯示例，完成生成代码以外的异步化。

2014.01.15
Examples:
调整通讯示例测试数据。

2014.01.14
Examples:
调整C#通讯示例，增加字节输入输出。

2014.01.09
Yuki.Core:
增加C#代码生成的Optional的字符串显示。
Yuki.Relation:
增加C#内存数据库代码生成的重复数据和不存在数据的异常说明。

2014.01.03
Yuki.Core:
修正C#通讯兼容代码生成中的一处笔误。

2013.12.28
Examples:
调整通讯示例，改进版本比较脚本，使得其支持增量比较。

2013.12.22.0
*:
升级为Visual Studio 2013项目文件。

2013.12.13
Examples:
调整通讯示例，修改日志，增加日志名称。
调整通讯示例，增强日志防出错能力。
Yuki.Core:
修正对象数据结构输出中部分注释中有空格或括号没有加双引号的问题。

2013.12.10
Examples:
调整C#通讯示例，删除无用配置选项。

2013.12.09
Examples:
修改C#通讯示例，增加版本检查和服务器关闭通知。
修改C++通讯示例，增加版本检查。
调整C#通讯示例，修改部分文件位置。

2013.12.08
Yuki.Core, Yuki.Relation:
整理类型引用闭包计算相关函数。
去除部分无用参数。
修改拼写错误。
Yuki.Core, Yuki.SchemaManipulator:
实现C#对象数据结构通讯兼容代码生成。
Examples:
修正数据库C++ MySQL示例遗漏更改的问题。
修改C#通讯示例，增加通讯兼容代码。

2013.12.07
Yuki.Core, Yuki.SchemaManipulator:
增加对象数据结构比较的Hash注释。
修改Schema Hash计算方法，排除无关类型。
Examples:
修改通讯示例。

2013.12.06
Yuki.SchemaManipulator:
对象数据结构比较增加无关类型排除。

2013.12.05
*:
修正一处程序参数的写法。
Yuki.Core, Yuki.SchemaManipulator:
增加对象数据结构比较。
Examples:
修改通讯代码tree文件和生成脚本。

2013.11.16
Yuki.DatabaseRegenerator:
修正PostgreSQL数据库结构生成时没有自动增加注释的问题。

2013.11.15
Yuki.DatabaseRegenerator:
修正数据库结构生成时没有自动增加注释的问题。
Yuki.Relation:
修正MySQL数据库生成脚本的注释代码生成错误。
Examples:
修改通讯示例中对时间的处理。

2013.11.13
Yuki.Core, Yuki.Relation:
缓存类型Hash计算时产生的序列化器，提高代码生成的性能。

2013.11.10
Yuki.RelationSchemaManipulator:
增加t2pgsql和t2mysql选项的说明。
Yuki.Relation:
修正PostgreSQL和MySQL数据库生成脚本的注释代码生成错误。
*:
修正tree文件中的多余空格。

2013.11.02
Examples:
修改C#和Haxe通讯示例，使得部分代码更通用。
修复新代码引入的群发消息性能问题。

2013.10.31
Yuki.Relation:
增加数据库代码生成对自行实现锁定的支持。
Examples:
增加自行实现锁定的示例实现。

2013.10.10
Examples:
数据库示例增加对锁定不存在的行的加锁失败判断。

2013.10.09
Yuki.DatabaseRegenerator:
修正SQL Server数据导入时表名没有使用CollectionName，而使用了EntityName的问题。
Examples:
数据库示例增加对锁定不存在的行的测试。目前只有SQL Server能够通过测试，MySQL和PostgreSQL均无法通过该测试。

2013.10.01
Yuki.Relation:
修正C#和C++ Memory数据库代码生成中查询的By索引与数据表索引顺序不一致时生成代码错误的问题。

2013.09.29
Yuki.Core:
修正C++二进制代码生成中没有导入<locale>的遗漏。

2013.09.12
Yuki.Core:
增加Haxe关键字Dynamic。

2013.09.05
Yuki.DatabaseRegenerator:
增加表名重复的错误说明。

2013.07.16
Yuki.Relation:
提供更详细的数据导入错误说明。

2013.07.05
Yuki.Core:
修正JSON反序列化中浮点数的解析问题。

2013.06.30
Yuki.DatabaseRegenerator:
修正导入Binary类型的问题。
Yuki.Core, Yuki.Relation:
修正Xhtml生成的路径问题。

2013.06.23.0
更新Firefly库并发布版本。

2013.06.18
Yuki.Core:
去除C# JSON代码生成中的警告。

2013.06.05
Yuki.Relation:
修正C++ Memory代码生成中map进行select_many时因为枚举器是复制了元素而非引用了元素，导致select_many中返回的枚举器引用的集合的临时变量被过早释放，而无法取得值的问题。

2013.05.31
Yuki.Relation:
修正生成数据时对名称和注释重复的枚举的处理，此时以名称为准。
修正内存数据库生成中的Range只有OrderBy没有By时取得数据集的代码生成问题。
修正C# MySQL代码生成中Optional<Boolean>读取错误的问题。
Yuki.Core:
增加C#和C++代码生成的Optional类型的带异常获取值函数。

2013.05.30
Yuki.Relation:
修正Schema转换中对Optional<String>长度没有要求的问题。

2013.05.28
Yuki.Core:
修正Haxe的JSON代码生成中Optional类型序列化生成错误的问题。

2013.05.21
修改说明文档。
Yuki.Core:
修正Haxe的代码生成中枚举类型生成错误的问题。

2013.05.19
Yuki.Core:
修改Xhtml生成代码结构。
Yuki.Relation, Yuki.RelationSchemaManipulator:
增加Xhtml代码生成。

2013.05.08
Yuki.Relation:
增加解析数据出错时的错误位置提示。
修正Optional<Enum>无法正确读取的问题。

2013.04.30
Yuki.Core:
修正C++代码中的类前置声明的问题。

2013.04.27.0
修改说明文档。
修正Firefly强名称问题。

2013.04.18
Yuki.Core, Yuki.Relation:
修正C++代码生成中对Optional<T>的std::map的比较函数的支持问题。

2013.04.17
Yuki.Core:
修正C++代码生成中的命名空间代码生成错误。
Examples:
修改C++通讯示例，明确异步连接。

2013.04.16
Yuki.Core, Yuki.Relation, Yuki.Expression:
将所有代码生成器的初始化代码放到构造器中。
Yuki.Relation, Yuki.RelationSchemaManipulator:
增加C++ Memory数据库代码生成。使用cpplinq作为Linq库。

2013.04.15
Examples:
修正C++ MySQL示例的空格和编码。
修正C++ MySQL示例对空密码的支持。
修改C++ MySQL示例部分写法。
Yuki.Relation, Yuki.RelationSchemaManipulator:
增加C++数据库简单类型代码生成。
Yuki.Core, Yuki.Relation:
删除C++代码生成中的using namespace。
Yuki.Relation:
修正C++数据库简单类型代码生成没有判断枚举类型的问题。

2013.04.08
Yuki.Relation:
修正索引超过数据库字符数限制的问题。对于超过字符数限制的索引，其名字改为CRC32的散列。
修改查询格式，由Select One Mail By Id改为From Mail Select One By Id。
Examples:
按照Yuki.Relation的修改进行变更。

2013.04.07
Yuki.Relation:
增加加载Schema时对By和OrderBy的检查，首先检查每个列是否存在。

2013.04.04.0

2013.04.03
Yuki.DatabaseRegenerator:
增加生成带Schema的Memory数据库文件的功能。

2013.03.31
Yuki.Core:
修正VB代码生成中Optional类型的Boolean Equals(Object obj)方法调用时会栈溢出的问题。
修改List和Type类型的比较方法，固定为List和Type名称。
修改List和Optional类型的顺序。
增加C#、Haxe、ActionScript的JSON序列化代码生成对Set、Map的支持。其中ActionScript中Set和Map均用Vector代替。
修正Map的JSON序列化时的Value类型错误的问题。
修改一处写法。
将ActionScript的序列化代码集中，不再保留每个对象的单独序列化代码。
将ActionScript的序列化代码分离到Binary和JSON代码生成中。
Yuki.SchemaManipulator:
动态编译时增加System.dll和System.Core.dll的引用。
Yuki.Relation:
修改一处写法。
Examples:
在序列化示例中增加Set和Map的使用。
将ActionScript升级到Flex 4.6和Flash Player 11。
修正序列化示例ActionScript代码生成脚本。

2013.03.29
Yuki.Relation:
修正无法识别Optional类型的问题。
Yuki.Core:
修正C#代码生成中Optional类型的Boolean Equals(Object obj)方法调用时会栈溢出的问题。

2013.03.28
Yuki.Core:
增加类型名不存在时加载的检查。
Yuki.Relation:
将RelationSchema代码生成从使用Firefly项目的MetaSchemaManipulator改为使用YUKI项目的SchemaManipulator。
增加C# Memory、C# SqlServer、C# PostgreSQL、C# MySQL获得Hash的功能。
Yuki.Core, Yuki.Relation, Yuki.Expression:
将公共类型提到Yuki.Core中。
Yuki.Relation, Yuki.DatabaseRegenerator:
增加RelationValue，用于将数据库数据进行二进制和Tree序列化。将C# Memory只读内存数据库文件读写代码改用该序列化代码。
Yuki.Core, Yuki.Relation, Yuki.Expression, Yuki.DatabaseRegenerator:
修改写法。
Yuki.DatabaseRegenerator:
加载数据时使用对象结构代替原来的Tree结构。

2013.03.27
Yuki.Relation:
修正错误提示中查询语句里没有By和OrderBy的问题。
修正C#的SqlServer、PostgreSQL、MySQL中插入带有枚举类型的Entity时，生成的代码中没有枚举类型的Add方法导致编译出错的问题。
Examples:
数据库示例中增加插入带有枚举类型的Entity的测试样例。
Yuki.Core:
修正Haxe JSON代码生成中枚举类型转换错误的问题。
修正一处写法。
Yuki.Relation, Yuki.Expression:
增加获得Hash的功能。
Yuki.Relation:
增加C# Memory代码生成结果中判断Hash的功能。
Yuki.Expression:
增加C#表达式计算二进制程序集加载代码中判断Hash的功能。
Yuki.DatabaseRegenerator:
增加C# Memory数据生成时产生Hash的功能。

2013.03.21
Examples:
去除通讯C#和C++示例中的无用Communication命名空间。

2013.03.17
Yuki.Expression:
增加指数和自然对数函数。
Examples:
增加指数和自然对数函数的测试样例。

2013.03.14
Doc:
增加Yuki.Expression测试样例文档。
Examples:
表达式示例去除不必要的程序集引用。
表达式示例修正==与赋值=歧义的问题。

2013.03.13
Yuki.Expression:
调整库函数的加入方法。
修正部分库函数的问题。
增加默认变量上下文。
Yuki.Expression, ExpressionManipulator:
增加C#表达式计算二进制程序集加载代码生成。
Examples:
增加变量和函数赋值功能。
增加表达式计算测试样例。
增加删除变量和函数功能。
增加C#表达式计算二进制程序集加载代码生成测试。

2013.03.12
Yuki.Core:
修改ObjectSchema的散列方法。
Yuki.Expression, ExpressionManipulator:
修正表达式的缺少一目正负运算符的问题。
增加表达式求值。
Examples:
表达式示例增加表达式计算功能。

2013.03.11
Yuki.Core:
Haxe代码生成增加对Haxe 3.0.0 RC中新增的abstract关键字的识别。
Yuki.Expression, ExpressionManipulator:
增加表达式解析。
增加表达式生成二进制程序集。
Examples:
增加表达式示例。

2013.03.08
Yuki.Core:
修正Haxe JSON代码生成对Haxe 3.0.0 RC的Map的支持。
Examples:
修正Haxe通讯示例对Haxe 3.0.0 RC的macro的支持。
增加C#通讯示例服务器使用Ctrl+C正常退出的功能。
修正C#通讯示例Http服务器退出时的一处执行顺序问题。

2013.02.28
Yuki.Relation:
增加C#数据库代码连接池接口。
修正C# MySQL数据库代码生成中Upsert时返回值影响行数为2导致的问题。
Examples:
调整C#邮件和测试数据库示例，使用连接池接口。
Yuki.DatabaseRegenerator:
修正说明文字。

2013.02.27
Yuki.Relation:
修正T-SQL、PostgreSQL、MySQL代码生成中声明多个列名和顺序相同但部分列排列方向不同时索引名称冲突的问题。
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
增加只读内存数据库代码生成。
增加只读内存数据库文件生成，支持创建文件之前先创建目录。
Yuki.Relation:
改进只读内存数据库代码的性能。
Examples:
增加C# Memory邮件数据库示例。
调整C# Memory邮件数据库示例脚本和说明。

2013.02.26
Yuki.Relation, Yuki.RelationSchemaManipulator:
增加C#数据库简单类型代码生成是否依赖于Firefly的选项。

2013.02.18
更新联系方式。

2013.02.16
Yuki.Core:
修正C++代码生成中TaggedUnion中类型名称和变量名称重复时出现的编译问题，通过添加class和enum前缀。

2013.02.15
Yuki.SchemaManipulator, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
修正两处写法不一致。

2013.02.14.0
*:
升级Firefly库。

2013.02.01
Yuki.TcpSendReceive:
修正dll引用路径错误。

2013.01.29
Examples:
通讯示例分离错误和命令无法识别两个事件。
C#通讯示例增加SessionContext的销毁步骤。
Haxe通讯示例分离bin文件夹。

2013.01.26
Examples:
Haxe通讯示例修正获得的结果没有换行的问题。
将Haxe示例所有代码的Tab转换为空格。
Haxe通讯示例修正没有处理错误返回的问题。

2013.01.25
Examples:
C#通讯示例修正一处行尾空格不规范。
Yuki.Relation:
修正ObjectSchema转换为RelationSchema时，泛型基元转换时Set、Map变成非泛型基元的问题。

2013.01.23
Examples:
C#通讯示例服务器端在Linux上由于Mono在socket shutdown时远程主机率先shutdown时出现socket没有连接的异常的问题得到了workaround。
C#通讯示例服务器端在Linux上流量过大时出现的疑似丢包导致的双边等待卡死问题在测试程序中进行了处理。
C#通讯示例服务器端Http服务器删除多余调试信息。
C#通讯示例服务器端增加同IP未登陆连接数限制。

2013.01.22
Examples:
将所有C#示例在mono 3.0.3的xbuild下编译成功。
完善数据库示例说明。
Yuki.*:
升级Firefly，使得其在Linux下能处理双引号转义。
放弃.Net Framework 4.0 Client Profile，所有项目均转为使用完整版的.Net Framework 4.0。
将除TcpSendReceive以外的项目在mono 3.03的xbuild下编译成功。

2013.01.02
Yuki.Relation:
修正数据库导入SQL语句生成的换行格式。
Examples:
修正MySQL的说明，增加关于Unicode非基本平面的字符的支持的配置说明。

2012.12.31
Yuki.Core:
增加C#代码生成不依赖于Firefly的二进制序列化。
将C#代码生成中的部分修改同步到VB.Net代码生成。
Examples:
修改C#序列化示例，使用不依赖于Firefly的二进制序列化。
修改C#通讯示例，使客户端不依赖于Firefly的二进制序列化，这样可以避免客户端环境因为不能进行反射和动态代码生成导致无法使用本框架。
增加数据库查询索引为可选类型的情况。
Yuki.Relation:
修改数据库代码生成中查询索引为可选类型时的代码不一致的问题。

2012.12.28.0

2012.12.24
Examples:
修改Haxe示例部分写法。

2012.12.23
Examples:
修正C#通讯示例在openSUSE/Mono下的一些兼容性问题。

2012.12.22
Examples:
修改Haxe通讯示例网页为HTML5(XHTML)标准。
修正C++通讯示例在openSUSE下编译的警告。
修正C#通讯示例在Mono上System.Collections.Concurrent.ConcurrentBag(Of T)类型TryTake获得错误空值的问题。
修正C#通讯示例一处加锁问题。

2012.12.22.0
Yuki.Core:
调整Haxe JSON代码生成。
Examples:
增加Haxe通讯客户端示例。

2012.12.21
Yuki.Core:
增加Haxe JSON代码生成。
修正C# JSON代码生成中Tuple类型和Optional类型中的错误。
修正ActionScript JSON代码生成中的Alias类型和List类型中的错误。
Examples:
将BinarySerialization示例改为Serialization示例，增加C#、ActionScript、Haxe对JSON的序列化。

2012.12.20
Yuki.Core:
增加Haxe类型定义代码生成。
Examples:
增加Haxe代码生成示例。

2012.12.19
Yuki.Core:
修改C++代码生成，去除生成的代码中的Context概念。
修改ActionScript代码生成，使得服务器事件不再强制要求实现。
Examples:
重构C++通讯示例，整理代码并测试。
修改ActionScript通讯示例，和代码生成一致。
修正C#通讯示例HTTP客户端与Haxe/Javascript交互的一些问题。

2012.12.18
Examples:
C#通讯示例加入HTTP客户端，简单测试HTTP服务器。
完成测试C#通讯示例中的HTTP部分。
*:
升级Firefly库，解决其中的网络流读取不完整的bug。

2012.12.17
Yuki.Core:
修改C#代码生成，去除生成的代码中的Context概念。
Examples:
重构C#通讯示例，加入HTTP服务器(未测试)。

2012.12.16
Examples:
重构C#通讯示例，为HTTP服务器的加入做准备。

2012.12.14
Examples:
重构C#通讯示例，去除部分重复代码。
修正C#通讯示例中因为关闭Socket之后再Shutdown抛出异常导致的关闭Session速度非常慢的问题。
增加C#通讯示例的单进程多虚拟服务器功能，可在不同端口同时支持多种协议。
修正C#通讯示例客户端代码的一处线程安全问题。
修正C++通讯示例中与C#示例相同的一些代码。

2012.12.13
Yuki.Core, Examples:
修改C# JSON协议的代码生成，使其支持多版本调用。
Yuki.Core, Yuki.Relation:
去除所有代码生成的行尾多余空格。
统一tree文件名称。

2012.12.12
Yuki.Core:
修改JSON协议对TaggedUnion的处理，去除_tag字段。

2012.12.10
Yuki.DatabaseRegenerator:
移除对SQL Server CE的支持。
Yuki.Core, Yuki.Relation:
通过直接使用资源，绕过Mac上Mono无法读取间接程序集中的ResX资源的问题。

2012.11.28.0

2012.11.28
Yuki.Core:
修正C#和VB.Net代码生成中的类型名称没有用标准名称的问题。
Yuki.Relation, Yuki.RelationSchemaManipulator:
增加C# MySQL Query类型代码自动生成。
增加C# SQL Server Query类型代码自动生成。
增加C# PostgreSQL Query类型代码自动生成。
Examples:
增加C# MySQL邮件数据库示例。
增加C# SQL Server邮件数据库示例。
修改C++ MySQL示例中的Optional读取函数的拼法。
增加C# PostgreSQL邮件数据库示例。
Yuki.DatabaseRegenerator:
修正PostgreSQL导入时，自动生成Id的数据表强制导入Id后，再增加新数据会出现Id重复的问题。
*:
修正整数溢出标志不完全的问题。

2012.11.27
Yuki.Relation:
默认保留数据库代码生成中的没有使用的基元定义。
Examples:
分离数据库示例中的邮件数据库和性能测试数据库，修改文件夹命名。
增加C#数据库示例中对MySQL的支持。

2012.11.26
Yuki.Relation:
增加对关系Schema的结构验证。
增加了关系Schema中的Query类型的接口代码生成功能。
Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
修改拼写。
Examples:
修改数据库示例中的一处拼写错误。
Yuki.Core:
修正C# JSON代码生成中的一处多余引用。
去除部分多余代码。

2012.11.25
Yuki.Core:
修正拼写。
Yuki.Relation:
增加对关系Schema中的Query类型的读取支持。
Examples:
增加数据库示例中的Query定义。

2012.11.24
Yuki.Relation, Examples:
增加RelationSchemaLoader。
将关系Schema中的#Record预处理指令改为#Entity。
Yuki.Core, Yuki.SchemaManipulator, Yuki.RelationSchemaManipulator:
调整代码结构和命名。

2012.11.22
Yuki.Relation, Yuki.RelationSchemaManipulator, Examples:
增加Linq to Entities的支持。
增加对关联的Optional支持。
Examples:
增加MySQL关于名称大小写兼容性的配置的提示。
增加Linq to Entities对MySQL的兼容支持。
Yuki.Core:
修正VB、C#代码对Optional从引用类型转换时没有检查Null的问题。
Yuki.DatabaseRegenerator:
修正拼写。

2012.11.21
Yuki.Core:
增加VB、C#和C++的Optional取得值或默认值的功能。
Examples:
二进制序列化示例中增加Optional的类型使用。
数据库示例中增加枚举类型使用。
Yuki.Relation:
增加C# Linq to SQL代码生成中对Optional类型的注释提示。

2012.11.20
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
使用Optional类型替代Nullable的概念。
Examples:
修正Linq to SQL示例中没有考虑Email地址为空引用的问题。

2012.11.11
Yuki.Core, Yuki.SchemaManipulator:
增加/load、/save选项，支持将整个Schema保存成文件和从文件加载。

2012.11.01
Examples:
增加C++ MySQL数据库示例。
增加C++ MySQL数据库示例性能测试数据。
修正C++项目，使其支持Visual Studio 2012工具链。
*:
改用Visual Studio 2012工具链。

2012.10.31
Yuki.Core:
增加对Optional类型的原生支持。
修正对数据库代码生成的基元类型的支持。
Examples:
修正示例文件。

2012.10.25
Yuki.Core:
增加C#的JSON通讯对二进制整数类型的支持。

2012.08.06.0

2012.08.01
Yuki.TcpSendReceive:
增加对当前路径下的配置文件的识别。
Examples:
修正通讯示例中对非主动退出的支持。

2012.07.30
Yuki.TcpSendReceive:
修正二进制连接时没有生成Schema时断开连接会生成Schema，导致断开速度慢的问题。
去除无用的错误提示信息。

2012.07.27
Yuki.Core:
修正ActionScript代码生成中，int32读取时符号扩展导致的问题。

2012.07.26
Yuki.Core:
修正XHTML代码生成中根路径计算错误的问题。
去除CommandDef类型。
修正所有的通讯命令Hash计算没有计算命令本身的问题。
增加C#的JSON通讯对Byte的支持。
Yuki.TcpSendReceive:
将TcpSendReceive工具加入到正式代码，并增加使用通讯Schema和二进制服务器进行Json格式交互的功能。
Examples:
修正通讯示例使用退出命令是没有回显的问题。

2012.07.25
Yuki.Core:
修改ObjectSchemaLoader，使得在出现InvalidOperationException时可以报告文件位置。
修改C++代码生成，增加对/import:"UtfEncoding.h"和/import:<UtfEncoding.h>指令的支持。
修正C++代码生成没有指定命名空间时，代码中仍然使用命名空间指令的问题。
Yuki.Relation:
修正生成简单Schema时没有转换Optional的问题。
Yuki.Relation,Yuki.RelationSchemaManipulator:
修正生成关系类型结构的简单类型时丢失Optional类型的问题。

2012.07.24
Yuki.Core:
使用TreeFile的使用流但是提供路径的打开方法，以获得完整的错误信息。

2012.07.23
Yuki.Core:
增加ObjectSchema的自定义预处理指令扩展功能。
修改ActionScript代码生成，去除所有对*类型的引用。

2012.07.20
Yuki.SchemaManipulator:
修正Tree文件和二进制文件互相转换时写入目录没有检查是否存在的问题。

2012.07.19
Yuki.Core:
修正C++代码生成，将枚举类型放到最前面声明以解决VC和g++对枚举类型前置声明的兼容性问题。
修改XHTML文档生成，使用左右两栏形式。

2012.07.16
Yuki.Core:
修正C++代码生成中枚举类型外部多包含了一层指针类型的错误。

2012.07.08
Examples:
修正通讯C++示例在VC上的性能问题。
修改通讯C++示例的CMakeLists.txt文件。
修正通讯C++示例超时时的Session退出没有显示的问题。

2012.07.06
Examples:
修正数据库示例中的一些说明。

2012.07.03
Examples:
修正索引过长导致MySQL数据导入出错的问题。

2012.06.29.0
Examples:
增加数据库C#示例在Linux下的测试结果。
增加数据库C# Linq to SQL示例。

2012.06.28
Yuki.Relation:
修正关系类型结构转换中的List类型转换的问题。
Examples:
增加数据库C#示例和测试结果。

2012.06.26
Examples:
修正文件编码问题。
更新数据库示例中的数据定义和数据。
修正通讯示例中的脚本错误。
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
增加MySQL支持。
整理代码。
增加C#和C++简单数据库类型生成。

2012.06.23
Examples:
修改C++通讯示例，增加环境变量BOOST_ROOT支持。

2012.06.20
Yuki.DatabaseRegenerator:
整理命令行。
Examples:
增加数据库示例。

2012.06.19
Yuki.Relation, Yuki.RelationSchemaManipulator, Yuki.DatabaseRegenerator:
增加PostgreSQL支持。

2012.06.18
Examples:
修正C#和C++通讯示例，增加命令过滤函数。

2012.06.06.0
Examples:
将C++通讯示例中boost改为静态链接。
修正C#通讯示例性能测试代码。
重新进行性能测试。

2012.06.04
Examples:
改进C#通讯示例客户端的错误提示。
增加新测试结果。
将测试分为负载测试、稳定性测试、性能测试。
Yuki.Core, Examples:
去掉C#、C++通讯代码生成及示例中的客户端命令回调函数中的Context参数。

2012.06.02
Examples:
修正C#通讯示例与Mono的兼容性。
C++通讯示例增加关闭命令行输出的选项。
修正C#通讯示例客户端连接的一个线程同步问题。

2012.06.01
Examples:
修正C#通讯示例因System.Collections.Concurrent.ConcurrentDictionary(TKey, TValue)的Mono实现bug导致的线程不安全问题(运行时收到SIGSEGV信号)。
修改C#通讯示例在性能测试，无法连接上服务器时错误信息过多的问题。

2012.05.24
Yuki.Core, Examples:
修正C++通讯及示例中一些写法问题。
修正C++通讯及示例中字符串转换时当长度为0可能出现的问题。

2012.05.20
Examples:
修正C++通讯示例中的SessionToken的生成不随机的问题。

2012.05.14
Examples:
修改拼写错误。

2012.05.07
Examples:
增加C#和C++通讯示例服务器远程关闭功能。
增加对比测试数据。

2012.05.05.0
Examples:
修正C#通讯示例在openSUSE上运行时打开socket数量超过系统最大数量时崩溃的问题。
修正C++通讯示例在openSUSE上运行时打开socket数量超过系统最大数量时崩溃的问题。
增加C++通讯示例openSUSE下环境配置指南。

2012.05.04
Examples:
修正C++通讯示例在GCC-C++上的一些编译问题。
修正C++通讯示例在GCC-C++上的一些运行问题。
Yuki.Core:
修正C++二进制代码生成与GCC-C++的兼容性问题。

2012.05.03
Examples:
修正C++通讯示例中的线程同步问题。
增加C++通讯示例性能测试报告。
修正C++序列化示例的GCC-C++支持。
Yuki.Core, Yuki.SchemaManipulator, Yuki.Relation, Yuki.RelationSchemaManipulator:
分离出关系数据类型代码生成库和工具。

2012.05.02
Examples:
增加通讯示例性能测试部分。
增加C#通讯示例客户端自动测试功能。
修正C#通讯示例中的一些错误。
增加C#通讯示例性能测试报告。
修正C++通讯示例中的一些错误。
Yuki.Core:
修改C#二进制通讯序列化类，使其为内部实现为ThreadLocal的静态类。
修正C++二进制通讯时，参数长度为0时出错的问题。

2012.05.01
Yuki.Core:
在C#代码生成中增加客户端调用接口。
Examples:
修正C#通讯示例中的一些错误。
增加通讯C++示例项目二进制服务器。

2012.04.27
Yuki.Core:
修正C++代码生成中关于整数和字符串的一些错误。
Examples:
修正C++序列化示例中的一些错误。
修正C++通讯示例中的一些错误。

2012.04.26
Yuki.Core:
修正C++代码生成中的一些错误。
Examples:
修正C++序列化示例。
增加通讯C++示例项目，增加二进制客户端。
修正通讯C#示例项目的一些问题。

2012.04.25
Yuki.Core:
修正C++二进制代码生成中的去除已有命令功能的问题。
修改C++代码生成，使得所有作为接口的抽象类具有虚析构函数。

2012.04.24.0
Yuki.Core:
调整各个代码生成器的初始化代码，将传入参数移至构造函数。
增加C# JSON代码生成中对日志的AOP实现。
Examples;
修改通讯C#示例项目，增加二进制服务器。
修改通讯C#示例项目，增加二进制和Json客户端。
增加通讯ActionScript示例项目，增加二进制和Json客户端。

2012.04.23
Yuki.Core:
修正C#和C++2011通讯代码生成中没有提供去除已有命令功能的问题。
Examples:
修改通讯C#示例项目，增加Json服务器。

2012.04.21
Yuki.Core:
修正通讯代码生成在类型生成和二进制、JSON生成中在没有命令时不一致的问题。
为C++2011代码生成增加通讯功能。

2012.04.17
Yuki.Core:
从C# JSON通讯代码中忽略版本有关的内容。
修正C#二进制通讯客户端代码的一个问题。

2012.04.16.0
Yuki.Core, Yuki.SchemaManipulator:
分离ActionScript类型结构和通讯代码生成。
整理程序命令行提示信息顺序。
将ActionScript通讯代码改为ActionScript JSON通讯代码。
增加ActionScript二进制通讯代码。
Examples:
修正两处错误。
增加二进制通讯ActionScript示例项目。

2012.04.15
Yuki.Core:
增加子Schema计算功能。
修改Schema Hash计算方法，排除注释。
移动C#代码生成中的客户端命令和服务端事件的类型定义到公共代码生成中。
Yuki.Core, Yuki.SchemaManipulator:
将C#通讯代码改为C# JSON通讯代码。
将VB代码做C#代码的对应修改。
增加C#二进制通讯代码。
Examples:
增加二进制通讯C#示例项目。

2012.04.12
Yuki.Core:
删减重复代码。

2012.04.09
Yuki.Core, Yuki.SchemaManipulator:
增加ActionScript二进制序列化支持。
Examples:
增加二进制序列化ActionScript示例项目。

2012.04.08
Examples:
增加二进制序列化Java示例项目。
修改二进制序列化C++示例项目，使其能在GNU C++ 4.6上运行。
修改二进制序列化Schema格式，增加字符串。

2012.04.07
Yuki.Core, Yuki.SchemaManipulator:
增加Tree文件数据和二进制数据互相转换的功能。
增加静态类型的Tree文件数据和二进制数据互相转换的功能。
Examples:
修改二进制序列化示例，在元数据的基础上增加数据和VB、C#示例项目。
增加二进制序列化C++示例项目。

2012.04.06
Yuki.Core:
修改对象元类型结构定义，整理命名。
修正C#通讯类型中Alias的JSON序列化代码的语法错误。
增加对象结构的版本标记支持。
修改发布备份批处理文件。
Examples:
增加二进制序列化示例。

2012.04.05
Yuki.Core:
增加代码生成时Unit类型的Record标记。

2012.03.27
Yuki.Core:
增加C#数据库代码的数据预加载功能。

2012.03.23
Yuki.Core:
修正XHTML生成时，主页里服务器事件被标记为客户端方法的问题。

2012.03.19.0
Yuki.Core, Yuki.SchemaManipulator:
增加VB.Net类型定义和二进制序列化支持。

2012.03.18.0
Yuki.Core, Yuki.SchemaManipulator:
增加Java类型定义和二进制序列化支持。

2012.03.06
Yuki.Core:
整理代码。
增加数据库二进制流数据类型。
修正外键索引检测。
Yuki.DatabaseRegenerator:
增加数据库二进制流数据类型导入支持。

2012.03.05
Yuki.DatabaseRegenerator:
修正由于SQL Server CE不支持递减索引导致的问题。
Yuki.Core:
修正SQL代码生成中空字符串没有生成''，导致语句出错的问题。

2012.03.01
Yuki.Core:
修正ActionScript代码中的一个命名问题。

2012.02.27.0
Yuki.Core:
增加索引里列的降序指定。
增加子索引的Where查询功能。

2012.02.25
Yuki.Core:
增加ObjectSchemaLoader读取内存流的功能。

2012.02.24
增加Yuki.Core项目。
增加日期版本号、强名称签名，仿照Firefly项目规范发布。
为C#和C++代码生成增加各种整数类型和浮点类型。
增加C++的Set和Map支持。

2012.02.23
修正C#数据库代码生成时，ByXXX扩展方法没有对IQueryable的重载导致使用Linq to Objects而非Linq to SQL来取值的问题。
修正C++代码生成时，如果没有使用Boolean基元时，生成标签联合的代码会编译错误的问题。
修正C++二进制序列化代码生成得到的代码中和别名类型有关的编译错误。

2012.02.10.0
完善文档，首次发布。

2012.02.09
删除ActionScript代码中的com.amf.cairngorm.vo依赖。

2012.01.14
修正XHTML生成时，服务器事件中出现多余的${GenericParameters}字样的问题。

2012.01.11
将正式名字从Yuki改为YUKI，Yuki只作为开发代号。

2011.12.02
修正EnumParser和EnumWriter对于多行字符没有恰当转义的问题。

2011.11.23
修正通讯Schema化简时遇到没有定义的类型没有提示类型名的问题。

2011.11.21
修正ActionScript客户端函数调用时的请求序列化没有用JsonTranslator的问题。

2011.11.17
增加C#通讯代码客户端代码生成。

2011.11.16
将C++代码生成中的共享指针内存分配改为标准函数。

2011.11.12
增加备份脚本。
修正一个非C++的写法问题。

2011.11.11
增加C++二进制序列化代码生成。
修正一处字符串读取时的长度判断错误。

2011.11.10
增加C++代码框架生成。

2011.11.07
导入Yuki库。
