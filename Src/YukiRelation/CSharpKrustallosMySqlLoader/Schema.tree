$Comment
    ==========================================================================

      File:        Schema.tree
      Location:    Yuki.Relation <Tree>
      Description: 关系类型结构C# Krustallos-MySQL代码模板数据
      Version:     2014.11.12.
      Copyright(C) F.R.C.

    ==========================================================================

ObjectSchemaTemplate
    Keywords
    $End
    PrimitiveMappings
    $End
    Templates
        Template
            Name MainWithNamespace
            //Parameters: ${Header}, ${NamespaceName}, ${Imports}, ${Primitives}, ${ComplexTypes}
            Value
                $String
                    ${Header}
                    using ${Imports};
                    ${Primitives}
                    using Version = Krustallos.Version;

                    namespace [[${NamespaceName}]]
                    {
                        ${ComplexTypes}
                    }

                $End
        Template
            Name MainWithoutNamespace
            //Parameters: ${Header}, ${Imports}, ${Primitives}, ${ComplexTypes}
            Value
                $String
                    ${Header}
                    using ${Imports};
                    ${Primitives}
                    using Version = Krustallos.Version;

                    ${ComplexTypes}

                $End
        Template
            Name Header
            //Parameters: ${EntityNamespaceName}
            Value
                $String
                    //==========================================================================
                    //
                    //  Notice:      This file is automatically generated.
                    //               Please don't modify this file.
                    //
                    //==========================================================================

                    //Reference:

                    using System;
                    using System.Collections.Generic;
                    using Krustallos;
                    using ${EntityNamespaceName};
        Template
            Name DataLoad
            //Parameters: ${Loads}
            Value
                $String
                    public partial class MySqlDataAccess
                    {
                        public void Load(KrustallosData Data)
                        {
                            ${Loads}
                        }
                    }
        Template
            Name DataLoad_Load
            //Parameters: ${IndexNames}, ${Partitions}, ${Updates}, ${EntityName}, ${SQL}, ${ResultSets}
            Value
                $String
                    {
                        var cmd = CreateTextCommand();
                        cmd.CommandText = @"${SQL}";
                        using (var dr = cmd.ExecuteReader())
                        {
                            while (dr.Read())
                            {
                                var v = new [[${EntityName}]]
                                {
                                    ${ResultSets}
                                };
                                ${Partitions}
                                var [[${IndexNames}]] = [[p${IndexNames}]].GetLastVersionContent();
                                ${Updates}
                                [[p${IndexNames}]].PutVersion(new Version(0), [[${IndexNames}]]);
                            }
                        }
                    }
        Template
            Name DataLoad_Partition
            //Parameters: ${PartitionIndex}, ${IndexName}
            Value
                $String
                    var [[p${IndexName}]] = Data.[[${IndexName}]].GetPartition(${PartitionIndex});
        Template
            Name DataLoad_Update
            //Parameters: ${IndexName}, ${Key}
            Value
                $String
                    [[${IndexName}]] = [[${IndexName}]].AddOrSetItem(new Key(${Key}), v);
        Template
            Name SelectLock_ResultSet
            //Parameters: ${ParameterName}, ${TypeGet}
            Value
                $String
                    [[${ParameterName}]] = [[${TypeGet}]](dr, "${ParameterName}"),
        Template
            Name SelectLock_ResultSet_Last
            //Parameters: ${ParameterName}, ${TypeGet}
            Value
                $String
                    [[${ParameterName}]] = [[${TypeGet}]](dr, "${ParameterName}")
