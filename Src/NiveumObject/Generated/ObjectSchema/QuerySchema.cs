//==========================================================================
//
//  Notice:      This file is automatically generated.
//               Please don't modify this file.
//
//==========================================================================

#nullable enable
#pragma warning disable CS8618

using System;
using System.Collections.Generic;
using Boolean = System.Boolean;
using String = System.String;
using Type = System.Type;
using Int = System.Int32;
using Real = System.Double;
using Byte = System.Byte;
using UInt8 = System.Byte;
using UInt16 = System.UInt16;
using UInt32 = System.UInt32;
using UInt64 = System.UInt64;
using Int8 = System.SByte;
using Int16 = System.Int16;
using Int32 = System.Int32;
using Int64 = System.Int64;
using Float32 = System.Single;
using Float64 = System.Double;

namespace Niveum.ObjectSchema
{
    /// <summary>查询定义</summary>
    [Record]
    public sealed class QueryDef
    {
        /// <summary>名称</summary>
        public List<String> Name { get; init; }
        /// <summary>根结点类型</summary>
        public TypeSpec RootType { get; init; }
        /// <summary>映射规格</summary>
        public List<QueryMappingSpec> MappingSpecs { get; init; }
    }
    /// <summary>查询映射规格</summary>
    [Record]
    public sealed class QueryMappingSpec
    {
        /// <summary>名称</summary>
        public String Name { get; init; }
        /// <summary>映射表达式</summary>
        public QueryMappingExpr Expr { get; init; }
    }
    /// <summary>查询映射表达式</summary>
    [Record]
    public sealed class QueryMappingExpr
    {
        /// <summary>变量名称</summary>
        public Optional<String> Variable { get; init; }
        /// <summary>函数映射</summary>
        public Optional<QueryFunction> Function { get; init; }
        /// <summary>子映射</summary>
        public Optional<List<QueryMappingSpec>> SubMappings { get; init; }
    }
    /// <summary>查询参数</summary>
    [Record]
    public sealed class QueryParameter
    {
        /// <summary>名称</summary>
        public String Name { get; init; }
    }
    public enum QueryFunctionTag
    {
        /// <summary>返回空</summary>
        None = 0,
        /// <summary>获取长度</summary>
        Count = 1,
        /// <summary>选择器</summary>
        Select = 2
    }
    /// <summary>查询函数映射</summary>
    [TaggedUnion]
    public sealed class QueryFunction
    {
        [Tag] public QueryFunctionTag _Tag { get; init; }

        /// <summary>返回空</summary>
        public Unit None { get; init; }
        /// <summary>获取长度</summary>
        public Unit Count { get; init; }
        /// <summary>选择器</summary>
        public QuerySelect Select { get; init; }

        /// <summary>返回空</summary>
        public static QueryFunction CreateNone() { return new QueryFunction { _Tag = QueryFunctionTag.None, None = default(Unit) }; }
        /// <summary>获取长度</summary>
        public static QueryFunction CreateCount() { return new QueryFunction { _Tag = QueryFunctionTag.Count, Count = default(Unit) }; }
        /// <summary>选择器</summary>
        public static QueryFunction CreateSelect(QuerySelect Value) { return new QueryFunction { _Tag = QueryFunctionTag.Select, Select = Value }; }

        /// <summary>返回空</summary>
        public Boolean OnNone { get { return _Tag == QueryFunctionTag.None; } }
        /// <summary>获取长度</summary>
        public Boolean OnCount { get { return _Tag == QueryFunctionTag.Count; } }
        /// <summary>选择器</summary>
        public Boolean OnSelect { get { return _Tag == QueryFunctionTag.Select; } }
    }
    /// <summary>查询选择器</summary>
    [Record]
    public sealed class QuerySelect
    {
        /// <summary>量词</summary>
        public Numeral Numeral { get; init; }
        /// <summary>选择索引</summary>
        public List<String> By { get; init; }
        /// <summary>排序索引</summary>
        public List<OrderedField> OrderBy { get; init; }
        /// <summary>实参</summary>
        public List<QueryParameter> Arguments { get; init; }
    }
    public enum NumeralTag
    {
        /// <summary>0..1</summary>
        Optional = 0,
        /// <summary>1</summary>
        One = 1,
        /// <summary>*</summary>
        Many = 2,
        /// <summary>全部</summary>
        All = 3,
        /// <summary>区间</summary>
        Range = 4,
        /// <summary>数量</summary>
        Count = 5
    }
    /// <summary>量词</summary>
    [TaggedUnion]
    public sealed class Numeral
    {
        [Tag] public NumeralTag _Tag { get; init; }

        /// <summary>0..1</summary>
        public Unit Optional { get; init; }
        /// <summary>1</summary>
        public Unit One { get; init; }
        /// <summary>*</summary>
        public Unit Many { get; init; }
        /// <summary>全部</summary>
        public Unit All { get; init; }
        /// <summary>区间</summary>
        public Unit Range { get; init; }
        /// <summary>数量</summary>
        public Unit Count { get; init; }

        /// <summary>0..1</summary>
        public static Numeral CreateOptional() { return new Numeral { _Tag = NumeralTag.Optional, Optional = default(Unit) }; }
        /// <summary>1</summary>
        public static Numeral CreateOne() { return new Numeral { _Tag = NumeralTag.One, One = default(Unit) }; }
        /// <summary>*</summary>
        public static Numeral CreateMany() { return new Numeral { _Tag = NumeralTag.Many, Many = default(Unit) }; }
        /// <summary>全部</summary>
        public static Numeral CreateAll() { return new Numeral { _Tag = NumeralTag.All, All = default(Unit) }; }
        /// <summary>区间</summary>
        public static Numeral CreateRange() { return new Numeral { _Tag = NumeralTag.Range, Range = default(Unit) }; }
        /// <summary>数量</summary>
        public static Numeral CreateCount() { return new Numeral { _Tag = NumeralTag.Count, Count = default(Unit) }; }

        /// <summary>0..1</summary>
        public Boolean OnOptional { get { return _Tag == NumeralTag.Optional; } }
        /// <summary>1</summary>
        public Boolean OnOne { get { return _Tag == NumeralTag.One; } }
        /// <summary>*</summary>
        public Boolean OnMany { get { return _Tag == NumeralTag.Many; } }
        /// <summary>全部</summary>
        public Boolean OnAll { get { return _Tag == NumeralTag.All; } }
        /// <summary>区间</summary>
        public Boolean OnRange { get { return _Tag == NumeralTag.Range; } }
        /// <summary>数量</summary>
        public Boolean OnCount { get { return _Tag == NumeralTag.Count; } }
    }
    /// <summary>带序字段</summary>
    [Record]
    public sealed class OrderedField
    {
        /// <summary>名称</summary>
        public String Name { get; init; }
        /// <summary>是否逆序</summary>
        public Boolean IsDescending { get; init; }
    }
}
